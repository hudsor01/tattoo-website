const fs = require('fs');
const path = require('path');

// Create a simple test image (1x1 red pixel PNG)
const createTestImage = () => {
  // PNG header for a 1x1 red pixel
  const pngData = Buffer.from([
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, // PNG signature
    0x00, 0x00, 0x00, 0x0d, // IHDR chunk size
    0x49, 0x48, 0x44, 0x52, // IHDR
    0x00, 0x00, 0x00, 0x01, // width = 1
    0x00, 0x00, 0x00, 0x01, // height = 1
    0x08, 0x02, 0x00, 0x00, 0x00, // bit depth = 8, color type = 2 (RGB), compression = 0, filter = 0, interlace = 0
    0x90, 0x77, 0x53, 0xde, // CRC
    0x00, 0x00, 0x00, 0x0c, // IDAT chunk size
    0x49, 0x44, 0x41, 0x54, // IDAT
    0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00, 0x01, 0x00, // compressed data (red pixel)
    0x0f, 0x53, 0xd3, 0x7d, // CRC
    0x00, 0x00, 0x00, 0x00, // IEND chunk size
    0x49, 0x45, 0x4e, 0x44, // IEND
    0xae, 0x42, 0x60, 0x82  // CRC
  ]);
  
  const imagePath = path.join(__dirname, 'test-image.png');
  fs.writeFileSync(imagePath, pngData);
  
  return imagePath;
};

// Create a JPEG test image
const createTestJpeg = () => {
  // Minimal JPEG structure (this won't be a valid image but will have correct MIME type)
  const jpegData = Buffer.from([
    0xFF, 0xD8, 0xFF, 0xE0, // JPEG SOI and APP0 marker
    0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, // JFIF identifier
    0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, // JFIF data
    0x00, 0x00, 0xFF, 0xD9 // JPEG EOI
  ]);
  
  const imagePath = path.join(__dirname, 'test-image.jpg');
  fs.writeFileSync(imagePath, jpegData);
  
  return imagePath;
};

module.exports = { createTestImage, createTestJpeg };

// If run directly, create the test images
if (require.main === module) {
  createTestImage();
  createTestJpeg();
  console.log('Test images created successfully');
}